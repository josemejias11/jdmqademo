name: CI

on:
  push:
    branches: [main, updates]
  pull_request:
    branches: [main, updates]
  workflow_dispatch: # Allow manual trigger

# Cancel previous workflow runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Lint and type check job - runs quickly to catch issues early
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Type check frontend
        run: npm run type-check

      - name: Type check server
        run: npm run type-check:server

      - name: Lint code
        run: npm run lint

      - name: Install e2e dependencies
        run: |
          cd e2e
          npm ci --legacy-peer-deps

      - name: Type check e2e tests
        run: |
          cd e2e
          npm run type-check

  # Build job - ensures the app builds successfully
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build frontend
        run: npm run build

      - name: Build server
        run: npm run build:server

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            build/
            server/dist/
          retention-days: 1

  # E2E tests job - runs the full test suite
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, build]

    env:
      NODE_ENV: test
      JWT_SECRET: devsecret
      API_URL: http://localhost:3001
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Install e2e dependencies
        run: |
          cd e2e
          npm ci --legacy-peer-deps

      - name: Install Playwright browsers
        run: |
          cd e2e
          npx playwright install --with-deps

      - name: Set up e2e environment
        run: |
          cd e2e
          cat > .env << EOF
          BASE_URL=http://localhost:3000
          API_URL=http://localhost:3001
          TEST_USERNAME=admin
          TEST_PASSWORD=changeme
          ADMIN_USERNAME=admin
          ADMIN_PASSWORD=changeme
          HEADLESS=true
          RECORD_VIDEO_ON_FAILURE=true
          SCREENSHOT_ON_FAILURE=true
          DEFAULT_TIMEOUT=10000
          EOF

      - name: Start backend server
        run: |
          npm run server &
          npx wait-on http://localhost:3001/api/health --timeout 30000

      - name: Start frontend application
        run: |
          npm start &
          npx wait-on http://localhost:3000 --timeout 60000

      - name: Run E2E tests
        run: |
          cd e2e
          npm test -- --project=chromium --project=firefox --project=webkit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            e2e/test-results/
            e2e/playwright-report/
          retention-days: 7

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e/playwright-report
          retention-days: 30
