{"ast":null,"code":"var _jsxFileName = \"/Users/josemejias/WebstormProjects/jdmqademo/src/context/TaskContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { getAuthConfig } from '../utils/authUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = '/api/tasks';\n// Create the context\nexport const TaskContext = /*#__PURE__*/createContext(undefined);\n\n// Custom hook to use the context\nexport const useTasks = () => {\n  _s();\n  const context = useContext(TaskContext);\n  if (!context) {\n    throw new Error('useTasks must be used within a TaskProvider');\n  }\n  return context;\n};\n_s(useTasks, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Provider component\nexport const TaskProvider = ({\n  children\n}) => {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Use the getAuthConfig from authUtils\n  const getConfig = useCallback(() => {\n    return getAuthConfig();\n  }, []);\n\n  // Load tasks from API on initial load\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get(API_URL, getConfig());\n        setTasks(response.data);\n      } catch (err) {\n        var _apiError$response;\n        const apiError = err;\n        console.error('Error fetching tasks:', apiError);\n\n        // Special handling for 431 errors (Request Header Fields Too Large)\n        if (((_apiError$response = apiError.response) === null || _apiError$response === void 0 ? void 0 : _apiError$response.status) === 431) {\n          // This could be caused by a token that's too large\n          setError('Session expired or invalid. Please log out and log in again.');\n        } else {\n          var _apiError$response2, _apiError$response2$d;\n          setError(((_apiError$response2 = apiError.response) === null || _apiError$response2 === void 0 ? void 0 : (_apiError$response2$d = _apiError$response2.data) === null || _apiError$response2$d === void 0 ? void 0 : _apiError$response2$d.message) || 'Failed to load tasks. Please try again later.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    void fetchTasks();\n  }, [getConfig]);\n\n  // Add a new task via API\n  const addTask = async text => {\n    if (text.trim() === '') return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(API_URL, {\n        title: text.trim(),\n        description: ''\n      }, getConfig());\n      setTasks([...tasks, response.data]);\n    } catch (err) {\n      var _apiError$response3, _apiError$response3$d;\n      const apiError = err;\n      console.error('Error adding task:', apiError);\n      setError(((_apiError$response3 = apiError.response) === null || _apiError$response3 === void 0 ? void 0 : (_apiError$response3$d = _apiError$response3.data) === null || _apiError$response3$d === void 0 ? void 0 : _apiError$response3$d.message) || 'Failed to add task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a new task\n  const handleAddTask = e => {\n    e.preventDefault();\n    void addTask(task);\n    setTask('');\n  };\n\n  // Toggle the 'done' status of a task via API\n  const toggleTaskDone = async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Find the task to toggle\n      const taskToToggle = tasks.find(t => t.id === id);\n      if (!taskToToggle) {\n        console.error('Task not found');\n        setError('Task not found');\n        return;\n      }\n\n      // Update the task via API\n      const response = await axios.put(`${API_URL}/${id}`, {\n        completed: !taskToToggle.completed\n      }, getConfig());\n\n      // Update local state\n      setTasks(tasks.map(t => t.id === id ? response.data : t));\n    } catch (err) {\n      var _apiError$response4, _apiError$response4$d;\n      const apiError = err;\n      console.error('Error toggling task:', apiError);\n      setError(((_apiError$response4 = apiError.response) === null || _apiError$response4 === void 0 ? void 0 : (_apiError$response4$d = _apiError$response4.data) === null || _apiError$response4$d === void 0 ? void 0 : _apiError$response4$d.message) || 'Failed to update task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a task via API\n  const deleteTask = async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      await axios.delete(`${API_URL}/${id}`, getConfig());\n      setTasks(tasks.filter(t => t.id !== id));\n    } catch (err) {\n      var _apiError$response5, _apiError$response5$d;\n      const apiError = err;\n      console.error('Error deleting task:', apiError);\n      setError(((_apiError$response5 = apiError.response) === null || _apiError$response5 === void 0 ? void 0 : (_apiError$response5$d = _apiError$response5.data) === null || _apiError$response5$d === void 0 ? void 0 : _apiError$response5$d.message) || 'Failed to delete task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Values and functions to expose via the context\n  const value = {\n    tasks,\n    task,\n    setTask,\n    handleAddTask,\n    toggleTaskDone,\n    deleteTask,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 10\n  }, this);\n};\n_s2(TaskProvider, \"gOZh+A353aFF6oDn9nSox/ken0M=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","getAuthConfig","jsxDEV","_jsxDEV","API_URL","TaskContext","undefined","useTasks","_s","context","Error","TaskProvider","children","_s2","tasks","setTasks","task","setTask","loading","setLoading","error","setError","getConfig","fetchTasks","response","get","data","err","_apiError$response","apiError","console","status","_apiError$response2","_apiError$response2$d","message","addTask","text","trim","post","title","description","_apiError$response3","_apiError$response3$d","handleAddTask","e","preventDefault","toggleTaskDone","id","taskToToggle","find","t","put","completed","map","_apiError$response4","_apiError$response4$d","deleteTask","delete","filter","_apiError$response5","_apiError$response5$d","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/josemejias/WebstormProjects/jdmqademo/src/context/TaskContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport { Task, ApiError } from '../types';\nimport { getAuthConfig } from '../utils/authUtils';\n\nconst API_URL = '/api/tasks';\n\ninterface TaskContextType {\n  tasks: Task[];\n  task: string;\n  setTask: (task: string) => void;\n  handleAddTask: (e: React.FormEvent<HTMLFormElement>) => void;\n  toggleTaskDone: (id: number) => void;\n  deleteTask: (id: number) => void;\n  loading: boolean;\n  error: string | null;\n}\n\n// Create the context\nexport const TaskContext = createContext<TaskContextType | undefined>(undefined);\n\n// Custom hook to use the context\nexport const useTasks = () => {\n  const context = useContext(TaskContext);\n  if (!context) {\n    throw new Error('useTasks must be used within a TaskProvider');\n  }\n  return context;\n};\n\ninterface TaskProviderProps {\n  children: React.ReactNode;\n}\n\n// Provider component\nexport const TaskProvider: React.FC<TaskProviderProps> = ({ children }) => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [task, setTask] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Use the getAuthConfig from authUtils\n  const getConfig = useCallback(() => {\n    return getAuthConfig();\n  }, []);\n\n  // Load tasks from API on initial load\n  useEffect(() => {\n    const fetchTasks = async (): Promise<void> => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const response: AxiosResponse<Task[]> = await axios.get(API_URL, getConfig());\n        setTasks(response.data);\n         } catch (err) {\n      const apiError = err as ApiError;\n      console.error('Error fetching tasks:', apiError);\n      \n      // Special handling for 431 errors (Request Header Fields Too Large)\n      if (apiError.response?.status === 431) {\n        // This could be caused by a token that's too large\n        setError('Session expired or invalid. Please log out and log in again.');\n      } else {\n        setError(\n          apiError.response?.data?.message || 'Failed to load tasks. Please try again later.'\n        );\n      }\n    } finally {\n        setLoading(false);\n      }\n    };\n\n    void fetchTasks();\n  }, [getConfig]);\n\n  // Add a new task via API\n  const addTask = async (text: string): Promise<void> => {\n    if (text.trim() === '') return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response: AxiosResponse<Task> = await axios.post(\n        API_URL,\n        { title: text.trim(), description: '' },\n        getConfig()\n      );\n\n      setTasks([...tasks, response.data]);\n    } catch (err) {\n      const apiError = err as ApiError;\n      console.error('Error adding task:', apiError);\n      setError(apiError.response?.data?.message || 'Failed to add task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a new task\n  const handleAddTask = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    void addTask(task);\n    setTask('');\n  };\n\n  // Toggle the 'done' status of a task via API\n  const toggleTaskDone = async (id: number): Promise<void> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Find the task to toggle\n      const taskToToggle = tasks.find(t => t.id === id);\n      if (!taskToToggle) {\n        console.error('Task not found');\n        setError('Task not found');\n        return;\n      }\n\n      // Update the task via API\n      const response: AxiosResponse<Task> = await axios.put(\n        `${API_URL}/${id}`,\n        { completed: !taskToToggle.completed },\n        getConfig()\n      );\n\n      // Update local state\n      setTasks(tasks.map(t => (t.id === id ? response.data : t)));\n    } catch (err) {\n      const apiError = err as ApiError;\n      console.error('Error toggling task:', apiError);\n      setError(\n        apiError.response?.data?.message || 'Failed to update task. Please try again later.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a task via API\n  const deleteTask = async (id: number): Promise<void> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      await axios.delete<void>(`${API_URL}/${id}`, getConfig());\n      setTasks(tasks.filter(t => t.id !== id));\n    } catch (err) {\n      const apiError = err as ApiError;\n      console.error('Error deleting task:', apiError);\n      setError(\n        apiError.response?.data?.message || 'Failed to delete task. Please try again later.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Values and functions to expose via the context\n  const value = {\n    tasks,\n    task,\n    setTask,\n    handleAddTask,\n    toggleTaskDone,\n    deleteTask,\n    loading,\n    error\n  };\n\n  return <TaskContext.Provider value={value}>{children}</TaskContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}