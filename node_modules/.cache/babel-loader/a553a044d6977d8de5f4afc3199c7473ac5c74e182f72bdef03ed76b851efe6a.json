{"ast":null,"code":"// Authentication utility functions\n\n/**\n * Get the authentication token from local storage\n * @returns The authentication token or null if not found\n */\nexport const getAuthToken = () => localStorage.getItem('auth_token');\n\n/**\n * Set the authentication token in local storage\n * @param token The token to store\n */\nexport const setAuthToken = token => {\n  localStorage.setItem('auth_token', token);\n};\n\n/**\n * Remove the authentication token from local storage\n */\nexport const removeAuthToken = () => {\n  localStorage.removeItem('auth_token');\n};\n\n/**\n * Get axios configuration with authentication headers\n * @returns Axios config object with authorization header\n */\nexport const getAuthConfig = () => {\n  const token = getAuthToken();\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};","map":{"version":3,"names":["getAuthToken","localStorage","getItem","setAuthToken","token","setItem","removeAuthToken","removeItem","getAuthConfig","headers","Authorization"],"sources":["/Users/josemejias/WebstormProjects/jdmqademo/src/utils/authUtils.ts"],"sourcesContent":["// Authentication utility functions\nimport { AxiosAuthConfig } from '../types';\n\n/**\n * Get the authentication token from local storage\n * @returns The authentication token or null if not found\n */\nexport const getAuthToken = (): string | null => localStorage.getItem('auth_token');\n\n/**\n * Set the authentication token in local storage\n * @param token The token to store\n */\nexport const setAuthToken = (token: string): void => {\n  localStorage.setItem('auth_token', token);\n};\n\n/**\n * Remove the authentication token from local storage\n */\nexport const removeAuthToken = (): void => {\n  localStorage.removeItem('auth_token');\n};\n\n/**\n * Get axios configuration with authentication headers\n * @returns Axios config object with authorization header\n */\nexport const getAuthConfig = (): AxiosAuthConfig => {\n  const token = getAuthToken();\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\n"],"mappings":"AAAA;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMA,YAAY,GAAGA,CAAA,KAAqBC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;;AAEnF;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAa,IAAW;EACnDH,YAAY,CAACI,OAAO,CAAC,YAAY,EAAED,KAAK,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAME,eAAe,GAAGA,CAAA,KAAY;EACzCL,YAAY,CAACM,UAAU,CAAC,YAAY,CAAC;AACvC,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAuB;EAClD,MAAMJ,KAAK,GAAGJ,YAAY,CAAC,CAAC;EAC5B,OAAO;IACLS,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUN,KAAK;IAChC;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}