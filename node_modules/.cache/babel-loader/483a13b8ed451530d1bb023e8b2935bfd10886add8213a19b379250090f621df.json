{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const API_URL='http://localhost:5000/api/tasks';// Create the context\nexport const TaskContext=/*#__PURE__*/createContext(undefined);// Custom hook to use the context\nexport const useTasks=()=>{const context=useContext(TaskContext);if(!context){throw new Error('useTasks must be used within a TaskProvider');}return context;};// Provider component\nexport const TaskProvider=_ref=>{let{children}=_ref;const[tasks,setTasks]=useState([]);const[task,setTask]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Get the auth token for API requests\nconst getAuthToken=()=>{return localStorage.getItem('auth_token');};// Configure axios with auth token\nconst getAxiosConfig=()=>{const token=getAuthToken();return{headers:{Authorization:\"Bearer \".concat(token)}};};// Map backend task to frontend task\nconst mapBackendTask=backendTask=>{return{id:backendTask.id,text:backendTask.title,done:backendTask.completed};};// Load tasks from API on initial load\nuseEffect(()=>{const fetchTasks=async()=>{setLoading(true);setError(null);try{const response=await axios.get(API_URL,getAxiosConfig());const backendTasks=response.data;const frontendTasks=backendTasks.map(mapBackendTask);setTasks(frontendTasks);}catch(err){var _apiError$response,_apiError$response$da;const apiError=err;console.error('Error fetching tasks:',apiError);setError(((_apiError$response=apiError.response)===null||_apiError$response===void 0?void 0:(_apiError$response$da=_apiError$response.data)===null||_apiError$response$da===void 0?void 0:_apiError$response$da.message)||'Failed to load tasks. Please try again later.');}finally{setLoading(false);}};fetchTasks();},[]);// Add a new task via API\nconst addTask=async text=>{if(text.trim()==='')return;setLoading(true);setError(null);try{const response=await axios.post(API_URL,{title:text.trim(),description:''},getAxiosConfig());const newTask=mapBackendTask(response.data);setTasks([...tasks,newTask]);}catch(err){var _apiError$response2,_apiError$response2$d;const apiError=err;console.error('Error adding task:',apiError);setError(((_apiError$response2=apiError.response)===null||_apiError$response2===void 0?void 0:(_apiError$response2$d=_apiError$response2.data)===null||_apiError$response2$d===void 0?void 0:_apiError$response2$d.message)||'Failed to add task. Please try again later.');}finally{setLoading(false);}};// Add a new task\nconst handleAddTask=e=>{e.preventDefault();addTask(task);setTask('');};// Toggle the 'done' status of a task via API\nconst toggleTaskDone=async id=>{setLoading(true);setError(null);try{// Find the task to toggle\nconst taskToToggle=tasks.find(t=>t.id===id);if(!taskToToggle){throw new Error('Task not found');}// Update the task via API\nconst response=await axios.put(\"\".concat(API_URL,\"/\").concat(id),{completed:!taskToToggle.done},getAxiosConfig());// Update local state\nconst updatedTask=mapBackendTask(response.data);setTasks(tasks.map(t=>t.id===id?updatedTask:t));}catch(err){var _apiError$response3,_apiError$response3$d;const apiError=err;console.error('Error toggling task:',apiError);setError(((_apiError$response3=apiError.response)===null||_apiError$response3===void 0?void 0:(_apiError$response3$d=_apiError$response3.data)===null||_apiError$response3$d===void 0?void 0:_apiError$response3$d.message)||'Failed to update task. Please try again later.');}finally{setLoading(false);}};// Delete a task via API\nconst deleteTask=async id=>{setLoading(true);setError(null);try{await axios.delete(\"\".concat(API_URL,\"/\").concat(id),getAxiosConfig());setTasks(tasks.filter(t=>t.id!==id));}catch(err){var _apiError$response4,_apiError$response4$d;const apiError=err;console.error('Error deleting task:',apiError);setError(((_apiError$response4=apiError.response)===null||_apiError$response4===void 0?void 0:(_apiError$response4$d=_apiError$response4.data)===null||_apiError$response4$d===void 0?void 0:_apiError$response4$d.message)||'Failed to delete task. Please try again later.');}finally{setLoading(false);}};// Values and functions to expose via the context\nconst value={tasks,task,setTask,handleAddTask,toggleTaskDone,deleteTask,loading,error};return/*#__PURE__*/_jsx(TaskContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","API_URL","TaskContext","undefined","useTasks","context","Error","TaskProvider","_ref","children","tasks","setTasks","task","setTask","loading","setLoading","error","setError","getAuthToken","localStorage","getItem","getAxiosConfig","token","headers","Authorization","concat","mapBackendTask","backendTask","id","text","title","done","completed","fetchTasks","response","get","backendTasks","data","frontendTasks","map","err","_apiError$response","_apiError$response$da","apiError","console","message","addTask","trim","post","description","newTask","_apiError$response2","_apiError$response2$d","handleAddTask","e","preventDefault","toggleTaskDone","taskToToggle","find","t","put","updatedTask","_apiError$response3","_apiError$response3$d","deleteTask","delete","filter","_apiError$response4","_apiError$response4$d","value","Provider"],"sources":["/Users/josemejias/WebstormProjects/jdmqademo/src/context/TaskContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport { Task, BackendTask, ApiError, AxiosAuthConfig } from '../types';\n\nconst API_URL = 'http://localhost:5000/api/tasks';\n\ninterface TaskContextType {\n  tasks: Task[];\n  task: string;\n  setTask: (task: string) => void;\n  handleAddTask: (e: React.FormEvent<HTMLFormElement>) => void;\n  toggleTaskDone: (id: number) => void;\n  deleteTask: (id: number) => void;\n  loading: boolean;\n  error: string | null;\n}\n\n// Create the context\nexport const TaskContext = createContext<TaskContextType | undefined>(undefined);\n\n// Custom hook to use the context\nexport const useTasks = () => {\n  const context = useContext(TaskContext);\n  if (!context) {\n    throw new Error('useTasks must be used within a TaskProvider');\n  }\n  return context;\n};\n\ninterface TaskProviderProps {\n  children: React.ReactNode;\n}\n\n// Provider component\nexport const TaskProvider: React.FC<TaskProviderProps> = ({ children }) => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [task, setTask] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Get the auth token for API requests\n  const getAuthToken = (): string | null => {\n    return localStorage.getItem('auth_token');\n  };\n\n  // Configure axios with auth token\n  const getAxiosConfig = (): AxiosAuthConfig => {\n    const token = getAuthToken();\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n  };\n\n  // Map backend task to frontend task\n  const mapBackendTask = (backendTask: BackendTask): Task => {\n    return {\n      id: backendTask.id,\n      text: backendTask.title,\n      done: backendTask.completed\n    };\n  };\n\n  // Load tasks from API on initial load\n  useEffect(() => {\n    const fetchTasks = async (): Promise<void> => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const response: AxiosResponse<BackendTask[]> = await axios.get(API_URL, getAxiosConfig());\n        const backendTasks = response.data;\n        const frontendTasks = backendTasks.map(mapBackendTask);\n        setTasks(frontendTasks);\n      } catch (err) {\n        const apiError = err as ApiError;\n        console.error('Error fetching tasks:', apiError);\n        setError(apiError.response?.data?.message || 'Failed to load tasks. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  // Add a new task via API\n  const addTask = async (text: string): Promise<void> => {\n    if (text.trim() === '') return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response: AxiosResponse<BackendTask> = await axios.post(\n        API_URL, \n        { title: text.trim(), description: '' }, \n        getAxiosConfig()\n      );\n\n      const newTask = mapBackendTask(response.data);\n      setTasks([...tasks, newTask]);\n    } catch (err) {\n      const apiError = err as ApiError;\n      console.error('Error adding task:', apiError);\n      setError(apiError.response?.data?.message || 'Failed to add task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a new task\n  const handleAddTask = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    addTask(task);\n    setTask('');\n  };\n\n  // Toggle the 'done' status of a task via API\n  const toggleTaskDone = async (id: number): Promise<void> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Find the task to toggle\n      const taskToToggle = tasks.find(t => t.id === id);\n      if (!taskToToggle) {\n        throw new Error('Task not found');\n      }\n\n      // Update the task via API\n      const response: AxiosResponse<BackendTask> = await axios.put(\n        `${API_URL}/${id}`, \n        { completed: !taskToToggle.done }, \n        getAxiosConfig()\n      );\n\n      // Update local state\n      const updatedTask = mapBackendTask(response.data);\n      setTasks(tasks.map(t => t.id === id ? updatedTask : t));\n    } catch (err) {\n      const apiError = err as ApiError;\n      console.error('Error toggling task:', apiError);\n      setError(apiError.response?.data?.message || 'Failed to update task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a task via API\n  const deleteTask = async (id: number): Promise<void> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      await axios.delete<void>(`${API_URL}/${id}`, getAxiosConfig());\n      setTasks(tasks.filter(t => t.id !== id));\n    } catch (err) {\n      const apiError = err as ApiError;\n      console.error('Error deleting task:', apiError);\n      setError(apiError.response?.data?.message || 'Failed to delete task. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Values and functions to expose via the context\n  const value = {\n    tasks,\n    task,\n    setTask,\n    handleAddTask,\n    toggleTaskDone,\n    deleteTask,\n    loading,\n    error\n  };\n\n  return <TaskContext.Provider value={value}>{children}</TaskContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}