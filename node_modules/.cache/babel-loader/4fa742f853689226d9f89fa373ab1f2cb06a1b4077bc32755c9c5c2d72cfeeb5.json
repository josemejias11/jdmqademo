{"ast":null,"code":"var _jsxFileName = \"/Users/josemejias/WebstormProjects/jdmqademo/src/components/Task/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTasks } from '../../context/TaskContext';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    tasks,\n    loading,\n    error\n  } = useTasks();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  if (tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center\",\n      children: \"No tasks yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"/bWhpB7/wVFkVTLHtLBCo8XOnIA=\", false, function () {\n  return [useTasks];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useTasks","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","tasks","loading","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","id","_c","$RefreshReg$"],"sources":["/Users/josemejias/WebstormProjects/jdmqademo/src/components/Task/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport { useTasks } from '../../context/TaskContext';\nimport TaskItem from './TaskItem';\nimport { Task } from '../../types';\n\nconst TaskList: React.FC = () => {\n  const { tasks, loading, error } = useTasks();\n\n  if (loading) {\n    return <div className=\"alert alert-info text-center\">Loading tasks...</div>;\n  }\n\n  if (error) {\n    return <div className=\"alert alert-danger text-center\">{error}</div>;\n  }\n\n  if (tasks.length === 0) {\n    return <div className=\"alert alert-info text-center\">No tasks yet.</div>;\n  }\n\n  return (\n    <ul className=\"list-group\">\n      {tasks.map((task: Task) => (\n        <TaskItem key={task.id} task={task} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAE5C,IAAIO,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAKM,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7E;EAEA,IAAIN,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAKM,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtE;EAEA,IAAIR,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;IACtB,oBAAOZ,OAAA;MAAKM,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1E;EAEA,oBACEX,OAAA;IAAIM,SAAS,EAAC,YAAY;IAAAC,QAAA,EACvBJ,KAAK,CAACU,GAAG,CAAEC,IAAU,iBACpBd,OAAA,CAACF,QAAQ;MAAegB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACT,EAAA,CAtBID,QAAkB;EAAA,QACYJ,QAAQ;AAAA;AAAAmB,EAAA,GADtCf,QAAkB;AAwBxB,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}