{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const STORAGE_KEY='taskManager.tasks';// Create the context\nexport const TaskContext=/*#__PURE__*/createContext(undefined);// Custom hook to use the context\nexport const useTasks=()=>{const context=useContext(TaskContext);if(!context){throw new Error('useTasks must be used within a TaskProvider');}return context;};// Provider component\nexport const TaskProvider=_ref=>{let{children}=_ref;const[tasks,setTasks]=useState([]);const[task,setTask]=useState('');const loadStoredTasks=()=>{try{const storedTasks=localStorage.getItem(STORAGE_KEY);return storedTasks?JSON.parse(storedTasks):[];}catch(error){console.error('Error loading tasks from localStorage:',error);return[];}};// Load tasks from localStorage on initial load\nuseEffect(()=>{setTasks(loadStoredTasks());},[]);// Save tasks to localStorage when they change\nuseEffect(()=>{localStorage.setItem(STORAGE_KEY,JSON.stringify(tasks));},[tasks]);const addTask=text=>{if(text.trim()==='')return;setTasks([...tasks,{text:text.trim(),done:false}]);};// Add a new task\nconst handleAddTask=e=>{e.preventDefault();addTask(task);setTask('');};// Toggle the 'done' status of a task\nconst toggleTaskDone=index=>{const newTasks=[...tasks];newTasks[index].done=!newTasks[index].done;setTasks(newTasks);};// Delete a task\nconst deleteTask=index=>{setTasks(tasks.filter((_,i)=>i!==index));};// Values and functions to expose via the context\nconst value={tasks,task,setTask,handleAddTask,toggleTaskDone,deleteTask};return/*#__PURE__*/_jsx(TaskContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","STORAGE_KEY","TaskContext","undefined","useTasks","context","Error","TaskProvider","_ref","children","tasks","setTasks","task","setTask","loadStoredTasks","storedTasks","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addTask","text","trim","done","handleAddTask","e","preventDefault","toggleTaskDone","index","newTasks","deleteTask","filter","_","i","value","Provider"],"sources":["/Users/josemejias/WebstormProjects/jdmqademo/src/context/TaskContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Task } from '../types';\n\nconst STORAGE_KEY = 'taskManager.tasks';\n\ninterface TaskContextType {\n  tasks: Task[];\n  task: string;\n  setTask: (task: string) => void;\n  handleAddTask: (e: React.FormEvent<HTMLFormElement>) => void;\n  toggleTaskDone: (index: number) => void;\n  deleteTask: (index: number) => void;\n}\n\n// Create the context\nexport const TaskContext = createContext<TaskContextType | undefined>(undefined);\n\n// Custom hook to use the context\nexport const useTasks = () => {\n  const context = useContext(TaskContext);\n  if (!context) {\n    throw new Error('useTasks must be used within a TaskProvider');\n  }\n  return context;\n};\n\ninterface TaskProviderProps {\n  children: React.ReactNode;\n}\n\n// Provider component\nexport const TaskProvider: React.FC<TaskProviderProps> = ({ children }) => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [task, setTask] = useState<string>('');\n\n  const loadStoredTasks = () => {\n    try {\n      const storedTasks = localStorage.getItem(STORAGE_KEY);\n      return storedTasks ? JSON.parse(storedTasks) : [];\n    } catch (error) {\n      console.error('Error loading tasks from localStorage:', error);\n      return [];\n    }\n  };\n\n  // Load tasks from localStorage on initial load\n  useEffect(() => {\n    setTasks(loadStoredTasks());\n  }, []);\n\n  // Save tasks to localStorage when they change\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = (text: string): void => {\n    if (text.trim() === '') return;\n    setTasks([...tasks, { text: text.trim(), done: false }]);\n  };\n\n  // Add a new task\n  const handleAddTask = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    addTask(task);\n    setTask('');\n  };\n\n  // Toggle the 'done' status of a task\n  const toggleTaskDone = (index: number): void => {\n    const newTasks = [...tasks];\n    newTasks[index].done = !newTasks[index].done;\n    setTasks(newTasks);\n  };\n\n  // Delete a task\n  const deleteTask = (index: number): void => {\n    setTasks(tasks.filter((_, i) => i !== index));\n  };\n\n  // Values and functions to expose via the context\n  const value = {\n    tasks,\n    task,\n    setTask,\n    handleAddTask,\n    toggleTaskDone,\n    deleteTask\n  };\n\n  return <TaskContext.Provider value={value}>{children}</TaskContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}